version: '3'

services:

  Eureka:
    container_name: serviceregistry
    build: ./eurekaServer-master
    ports:
      - "8761:8761"
    hostname: serviceregistry
    image: "eureka"
    environment:
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/

  Gataway:
    container_name: gataway
    build: ./Cloud-getway-service
    ports:
      - "8089:8089"
    hostname: gataway
    environment:
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
<<<<<<< Updated upstream
    image: gateway
    depends_on:
      - Eureka
=======
      - spring.security.oauth2.client.registration.gateway.provider=my-provider
      - spring.security.oauth2.client.registration.gateway.client-id=apiGateway
      - spring.security.oauth2.client.registration.gateway.client-secret=nUTv9llzLDKAXQ7vv3eIsO0kTTvR4HqH
      - spring.security.oauth2.client.registration.gateway.authorization-grant-type=authorization_code
      - spring.security.oauth2.client.registration.gateway.redirect-uri=http://localhost:3000
      - spring.security.oauth2.client.registration.gateway.scope=openid,client,admin
      - spring.security.oauth2.client.provider.my-provider.issuer-uri=http://backend-keycloak-auth:8181/realms/test
    image: gateway
    depends_on:
      - kc
>>>>>>> Stashed changes

  Fournisseurs:
    container_name: fournisseurs
    build: ./ServiceFournisseur-main
    ports:
      - "8099:8099"
    hostname: fournisseurs
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://docker-mysql_1:3306/fournisseurs?createDatabaseIfNotExist=true&useUnicode=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "fournisseurs"
    depends_on:
      - docker-mysql_1
      - Eureka
<<<<<<< Updated upstream


  docker-mysql_1:
    container_name: mysql1
    image: mariadb:10.4.21
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3307:3306"

  docker-mysql_2:
    container_name: mysql1
    image: mariadb:10.4.21
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3308:3306"

  docker-mysql_3:
    container_name: mysql1
    image: mariadb:10.4.21
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3309:3306"
  Panier:
    container_name: panier
    build: ./ServicePanier-master
    ports:
      - "8062:8062"
    hostname: panier
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://docker-mysql_1:3306/servicepanier?createDatabaseIfNotExist=true&useUnicode=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "panier"
    depends_on:
      - docker-mysql_2
      - Eureka

  Commande:
    container_name: commande
    build: ./commandeService-master
    ports:
      - "8083:8083"
    hostname: commande
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://docker-mysql_1:3306/serviceCommande?createDatabaseIfNotExist=true&useUnicode=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "commande"
    depends_on:
      - docker-mysql_3
      - Eureka


  react:
    build: ./FrontEnd-micro-master
    ports:
      - "3000:3000"

    image: "react"
    command: npm start


  userservicemongo:
    build: ./UserServiceMongo-master
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI = mongodb://mongo:27017/DevSpace
    command: npm start
    image: userservicemongo
    depends_on:
      - mongodb


  mongodb:
    image: mongo:4.0.3
    hostname: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=DevSpace

  Facture:
    container_name: facture
    build: .\FactureMS-master
    ports:
      - "8084:8084"
    environment:
      - spring.datasource.url=jdbc:h2:file:./Database/Data/four;AUTO_SERVER=TRUE
      - spring.datasource.username=four
      - spring.datasource.password=four
      - spring.datasource.driver-class-name=org.h2.Driver
      - spring.jpa.hibernate.ddl-auto=create
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "facture"
    depends_on:
      - h3-database


  Produit:
    container_name: produit
    build: .\service-product-main
    ports:
      - "8092:8092"
    environment:
      - spring.datasource.url=jdbc:h2:file:./Database/Data/produit;AUTO_SERVER=TRUE
      - spring.datasource.username=produit
      - spring.datasource.password=produit
      - spring.datasource.driver-class-name=org.h2.Driver
      - spring.jpa.hibernate.ddl-auto=create
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "produit"
    depends_on:
      - h2-database


  h2-database:
    image: oscarfonts/h2
    ports:
      - "8082:8082"
    volumes:
      - ./h2-data:/opt/h2-data
    environment:
      - H2_OPTIONS=-ifNotExists

  h3-database:
    image: oscarfonts/h2
    ports:
      - "8081:8081"
    volumes:
      - ./h2-data:/opt/h2-data
    environment:
      - H2_OPTIONS=-ifNotExists

  db:
    image: postgres:13.5
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: my_admin
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: keycloak_db
    ports:
      - 5432:5432

  kc:
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak_db
      DB_USER: my_admin
      DB_SCHEMA: public
      DB_PASSWORD: my_password
      KEYCLOAK_HOSTNAME: backend-keycloak-auth
      KEYCLOAK_USER: kc_admin
      KEYCLOAK_PASSWORD: kc_password
    ports:
      - 8282:8282
    depends_on:
      - db


=======


  docker-mysql_1:
    container_name: mysql1
    image: mariadb:10.4.21
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3307:3306"
  docker-mysql_2:
    container_name: mysql2
    image: mariadb:10.4.21
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3308:3306"

  docker-mysql_3:
    container_name: mysql3
    image: mariadb:10.4.21
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3309:3306"
  Panier:
    container_name: panier
    build: ./ServicePanier-master
    ports:
      - "8062:8062"
    hostname: panier
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://docker-mysql_1:3306/servicepanier?createDatabaseIfNotExist=true&useUnicode=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "panier"
    depends_on:
      - docker-mysql_2
      - Eureka

  Commande:
    container_name: commande
    build: ./commandeService-master
    ports:
      - "8083:8083"
    hostname: commande
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://docker-mysql_1:3306/serviceCommande?createDatabaseIfNotExist=true&useUnicode=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "commande"
    depends_on:
      - docker-mysql_3
      - Eureka


  react:
    build: ./FrontEnd-micro-master
    ports:
      - "3000:3000"

    image: "react"
    command: npm start


  userservicemongo:
    build: ./UserServiceMongo-master
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI = mongodb://mongo:27017/DevSpace
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    command: npm start
    image: userservicemongo
    depends_on:
      - mongodb
      - Eureka


  mongodb:
    image: mongo:4.0.3
    hostname: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=DevSpace

  Facture:
    container_name: facture
    build: .\FactureMS-master
    ports:
      - "8084:8084"
    environment:
      - spring.datasource.url=jdbc:h2:file:./Database/Data/four;AUTO_SERVER=TRUE
      - spring.datasource.username=four
      - spring.datasource.password=four
      - spring.datasource.driver-class-name=org.h2.Driver
      - spring.jpa.hibernate.ddl-auto=create
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "facture"
    depends_on:
      - h3-database
      - Eureka


  Produit:
    container_name: produit
    build: .\service-product-main
    ports:
      - "8092:8092"
    environment:
      - spring.datasource.url=jdbc:h2:file:./Database/Data/produit;AUTO_SERVER=TRUE
      - spring.datasource.username=produit
      - spring.datasource.password=produit
      - spring.datasource.driver-class-name=org.h2.Driver
      - spring.jpa.hibernate.ddl-auto=create
      - eureka.client.serviceUrl.defaultZone = http://serviceregistry:8761/eureka/
    image: "produit"
    depends_on:
      - h2-database
      - Eureka


  h2-database:
    image: oscarfonts/h2
    ports:
      - "8082:8082"
    volumes:
      - ./h2-data:/opt/h2-data
    environment:
      - H2_OPTIONS=-ifNotExists

  h3-database:
    image: oscarfonts/h2
    ports:
      - "8081:8081"
    volumes:
      - ./h2-data:/opt/h2-data
    environment:
      - H2_OPTIONS=-ifNotExists

  db:
    image: postgres:13.5
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: my_admin
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: keycloak_db
    ports:
      - 5432:5432

  kc:
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak_db
      DB_USER: my_admin
      DB_SCHEMA: public
      DB_PASSWORD: my_password
      KEYCLOAK_HOSTNAME: backend-keycloak-auth
      KEYCLOAK_USER: kc_admin
      KEYCLOAK_PASSWORD: kc_password
    ports:
      - 8282:8080
    depends_on:
      - db
>>>>>>> Stashed changes



